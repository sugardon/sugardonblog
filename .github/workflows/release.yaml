---
name: Release

on:
  push:
    branches:
      - main

jobs:
  build-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write # needed for signing the images with GitHub OIDC Token

    name: build-image
    steps:
      - uses: actions/checkout@v4

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.8.1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            sugardon/sugardonblog
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha,format=long

      - name: Set up pack
        uses: buildpacks/github-actions/setup-pack@v5.8.8

      - name: Build image
        id: build
        env:
          REPOSITORY: "sugardon/sugardonblog"
          PLATFORMS: "linux/amd64 linux/arm64"
          TAGS: ${{ steps.meta.outputs.tags }}
          BUILDPACK_BUILDER: paketobuildpacks/builder-jammy-base:0.4.388
          NODE_ENV: production
          BP_NODE_RUN_SCRIPTS: "lint,build"
          # For playwright browser restriction
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: true
        run: |
          pack config default-builder ${BUILDPACK_BUILDER}
          images=""
          for tag in ${TAGS}; do
            if [ -z "$images" ]; then
              images+="${tag}"
            else
              images+=",${tag}"
            fi
          done

          for platform in ${PLATFORMS}; do
            pack build ${REPOSITORY} \
              --builder=${BUILDPACK_BUILDER} \
              --platform=${platform} \
              --tag=${images} \
              --publish \
              --report-output-dir=.
          done

          DIGEST=$(cat report.toml | sed -n 's/^.*digest *= *"\?\([^"]*\)".*$/\1/p')
          if [ -z "$DIGEST" ]; then
            echo "Cannot get digest from report.toml"
            exit 1
          fi
          echo "digest=${DIGEST}" >> $GITHUB_OUTPUT

      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.build.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}
